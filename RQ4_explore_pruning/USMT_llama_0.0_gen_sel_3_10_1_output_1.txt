mythril_disassembler:contract_name:USMT
./tests/testdata/solidity_files/0x899f4ee077f83a7747e4ccec8ee7aa74831a1de3.sol:USMT
cli:fdg.global_config.contract_name:USMT
Starting preprocessing.
number of genesis states: 1
total instructions: 5736
preprocessing: Achieved 99.98% coverage.
Ending preprocessing.
preprocessing time(s): 81.17701697349548

====== coverage ======
contract coverage: 82.32%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	68.21%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	58.97%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	49.17%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['setFeePool(address)']
	['renounceOwnership()']
	['approve(address,uint256)']
	['setTxFee(uint256)']
	['renounceMinter()']
	['burn(uint256)']
	['transferOwnership(address)']
	['increaseAllowance(address,uint256)']
	['addMinter(address)']
	['decreaseAllowance(address,uint256)']
	['mint(address,uint256)']
	['burnFrom(address,uint256)']
	['transfer(address,uint256)']
	['transferFrom(address,address,uint256)']
[31m

===== Generated sequences ====0x899f4ee077f83a7747e4ccec8ee7aa74831a1de3.sol====USMT====1====obtain_sequence.py[0m
[34mchangeFeePool:[0m
[0m	['setFeePool', 'changeFeePool'][0m
[34mtransfer:[0m
[0m	['transfer', 'transfer'][0m
[34mfeePoolTransfer:[0m
[0m	['setFeePool', 'feePoolTransfer'][0m
[34mtransferFrom:[0m
[0m	['approve', 'transferFrom'][0m
[34mapprove:[0m
[0m	['approve', 'approve'][0m
[34mincreaseAllowance:[0m
[0m	['approve', 'increaseAllowance'][0m
[34mdecreaseAllowance:[0m
[0m	['approve', 'decreaseAllowance'][0m
[34mburnFrom:[0m
[0m	['transfer', 'burnFrom'][0m

==============================
queue:
	setFeePool(address)#1
	renounceOwnership()#2
	approve(address,uint256)#3
	setTxFee(uint256)#4
	renounceMinter()#5
	burn(uint256)#6
	transferOwnership(address)#7
	increaseAllowance(address,uint256)#8
	addMinter(address)#9
	decreaseAllowance(address,uint256)#10
	mint(address,uint256)#11
	burnFrom(address,uint256)#12
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	transferFrom(address,address,uint256)#15

====== state and assigned functions ======
state key: setFeePool(address)#1
functions: ['changeFeePool', 'feePoolTransfer']

====== coverage ======
contract coverage: 87.03%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	58.97%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['setFeePool(address)', 'changeFeePool(address)']
	['setFeePool(address)', 'feePoolTransfer(address,uint256)']

==============================
queue:
	renounceOwnership()#2
	approve(address,uint256)#3
	setTxFee(uint256)#4
	renounceMinter()#5
	burn(uint256)#6
	transferOwnership(address)#7
	increaseAllowance(address,uint256)#8
	addMinter(address)#9
	decreaseAllowance(address,uint256)#10
	mint(address,uint256)#11
	burnFrom(address,uint256)#12
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	transferFrom(address,address,uint256)#15
	setFeePool(address)#changeFeePool(address)#16
	setFeePool(address)#feePoolTransfer(address,uint256)#17

====== state and assigned functions ======
state key: approve(address,uint256)#3
functions: ['increaseAllowance', 'approve', 'transferFrom', 'decreaseAllowance']

====== coverage ======
contract coverage: 87.03%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	58.97%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['approve(address,uint256)', 'approve(address,uint256)']
	['approve(address,uint256)', 'increaseAllowance(address,uint256)']
	['approve(address,uint256)', 'decreaseAllowance(address,uint256)']
	['approve(address,uint256)', 'transferFrom(address,address,uint256)']

==============================
queue:
	setTxFee(uint256)#4
	renounceMinter()#5
	burn(uint256)#6
	transferOwnership(address)#7
	increaseAllowance(address,uint256)#8
	addMinter(address)#9
	decreaseAllowance(address,uint256)#10
	mint(address,uint256)#11
	burnFrom(address,uint256)#12
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	transferFrom(address,address,uint256)#15
	setFeePool(address)#changeFeePool(address)#16
	setFeePool(address)#feePoolTransfer(address,uint256)#17
	approve(address,uint256)#approve(address,uint256)#18
	approve(address,uint256)#increaseAllowance(address,uint256)#19
	approve(address,uint256)#decreaseAllowance(address,uint256)#20
	approve(address,uint256)#transferFrom(address,address,uint256)#21

====== state and assigned functions ======
state key: transfer(address,uint256)#13
functions: ['burnFrom', 'transfer']

====== coverage ======
contract coverage: 87.03%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	58.97%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['transfer(address,uint256)', 'burnFrom(address,uint256)']
	['transfer(address,uint256)', 'transfer(address,uint256)']

==============================
queue:
	transfer(address,uint256)#14
	transferFrom(address,address,uint256)#15
	setFeePool(address)#changeFeePool(address)#16
	setFeePool(address)#feePoolTransfer(address,uint256)#17
	approve(address,uint256)#approve(address,uint256)#18
	approve(address,uint256)#increaseAllowance(address,uint256)#19
	approve(address,uint256)#decreaseAllowance(address,uint256)#20
	approve(address,uint256)#transferFrom(address,address,uint256)#21
	transfer(address,uint256)#burnFrom(address,uint256)#22
	transfer(address,uint256)#transfer(address,uint256)#23

====== state and assigned functions ======
state key: transfer(address,uint256)#14
functions: ['burnFrom', 'transfer']

====== coverage ======
contract coverage: 87.03%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	58.97%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['transfer(address,uint256)', 'transfer(address,uint256)']

==============================
queue:
	transferFrom(address,address,uint256)#15
	setFeePool(address)#changeFeePool(address)#16
	setFeePool(address)#feePoolTransfer(address,uint256)#17
	approve(address,uint256)#approve(address,uint256)#18
	approve(address,uint256)#increaseAllowance(address,uint256)#19
	approve(address,uint256)#decreaseAllowance(address,uint256)#20
	approve(address,uint256)#transferFrom(address,address,uint256)#21
	transfer(address,uint256)#burnFrom(address,uint256)#22
	transfer(address,uint256)#transfer(address,uint256)#23
	transfer(address,uint256)#transfer(address,uint256)#24
[31m====== Collect feedback ==========llm_related.py[0m
[31mtarget(s):['transfer', 'transferFrom', 'feePoolTransfer', 'approve', 'increaseAllowance', 'decreaseAllowance', 'burnFrom'][0m
[31mtarget: code coverage:[0m
[0m	transfer:58.971774193548384[0m
[0m	transferFrom:68.77551020408164[0m
[0m	feePoolTransfer:84.10351201478743[0m
[0m	approve:84.53237410071942[0m
[0m	increaseAllowance:88.88888888888889[0m
[0m	decreaseAllowance:88.88888888888889[0m
[0m	burnFrom:91.88679245283019[0m
[34mtransfer[0m
[0m['transfer', 'transfer'] is a valid sequence. However,function transfer still has the code coverage 58.971774193548384 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for transfer.[0m
[34mtransferFrom[0m
[0m['approve', 'transferFrom'] is a valid sequence. However,function transferFrom still has the code coverage 68.77551020408164 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for transferFrom.[0m
[34mfeePoolTransfer[0m
[0m['setFeePool', 'feePoolTransfer'] is a valid sequence. However,function feePoolTransfer still has the code coverage 84.10351201478743 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for feePoolTransfer.[0m
[34mapprove[0m
[0m['approve', 'approve'] is a valid sequence. However,function approve still has the code coverage 84.53237410071942 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for approve.[0m
[34mincreaseAllowance[0m
[0m['approve', 'increaseAllowance'] is a valid sequence. However,function increaseAllowance still has the code coverage 88.88888888888889 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for increaseAllowance.[0m
[34mdecreaseAllowance[0m
[0m['approve', 'decreaseAllowance'] is a valid sequence. However,function decreaseAllowance still has the code coverage 88.88888888888889 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for decreaseAllowance.[0m
[34mburnFrom[0m
[0m['transfer', 'burnFrom'] is a valid sequence. However,function burnFrom still has the code coverage 91.88679245283019 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for burnFrom.[0m
[31m

====graph====llm_related.py[0m
[34m"setTxFee":['transferFrom', 'transfer', 'burn', 'mint', 'burnFrom', 'decreaseAllowance', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership', 'changeFeePool'][0m
[34m"burn":['transferFrom', 'mint', 'burn', 'burnFrom', 'feePoolTransfer', 'transfer', 'changeFeePool', 'setTxFee', 'decreaseAllowance', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"mint":['transferFrom', 'burnFrom', 'feePoolTransfer', 'transfer', 'changeFeePool', 'mint', 'burn', 'setTxFee', 'decreaseAllowance', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceOwnership'][0m
[34m"burnFrom":['transferFrom', 'mint', 'burn', 'burnFrom', 'feePoolTransfer', 'decreaseAllowance', 'transfer', 'changeFeePool', 'setTxFee', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"transferFrom":['transferFrom', 'transfer', 'feePoolTransfer', 'changeFeePool', 'decreaseAllowance', 'setTxFee', 'burn', 'mint', 'burnFrom', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"decreaseAllowance":['transferFrom', 'decreaseAllowance', 'setTxFee', 'burn', 'mint', 'burnFrom', 'increaseAllowance', 'approve', 'transfer', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership', 'feePoolTransfer', 'changeFeePool'][0m
[34m"increaseAllowance":['transferFrom', 'decreaseAllowance', 'setTxFee', 'burn', 'mint', 'burnFrom', 'approve', 'transfer', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"approve":['transferFrom', 'decreaseAllowance', 'setTxFee', 'burn', 'mint', 'burnFrom', 'increaseAllowance', 'transfer', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"transfer":['transferFrom', 'feePoolTransfer', 'changeFeePool', 'transfer', 'setTxFee', 'burn', 'mint', 'burnFrom', 'decreaseAllowance', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"setFeePool":['feePoolTransfer', 'changeFeePool', 'transfer', 'setTxFee', 'burn', 'mint', 'burnFrom', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership', 'transferFrom', 'decreaseAllowance', 'increaseAllowance', 'approve'][0m
[34m"feePoolTransfer":['transferFrom', 'transfer', 'changeFeePool', 'setTxFee', 'burn', 'mint', 'burnFrom', 'decreaseAllowance', 'increaseAllowance', 'approve', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership', 'setFeePool'][0m
[34m"changeFeePool":['transferFrom', 'feePoolTransfer', 'transfer', 'setTxFee', 'burn', 'mint', 'burnFrom', 'decreaseAllowance', 'increaseAllowance', 'approve', 'setFeePool', 'transferOwnership', 'renounceMinter', 'addMinter', 'renounceOwnership'][0m
[34m"transferOwnership":['changeFeePool', 'setTxFee', 'setFeePool', 'renounceOwnership', 'burn', 'mint', 'burnFrom', 'transfer', 'renounceMinter', 'addMinter', 'transferFrom', 'decreaseAllowance', 'increaseAllowance', 'approve'][0m
[34m"renounceMinter":['mint', 'addMinter', 'burn', 'burnFrom'][0m
[34m"addMinter":['mint', 'addMinter', 'renounceMinter', 'burn', 'burnFrom'][0m
[34m"renounceOwnership":['changeFeePool', 'setTxFee', 'renounceOwnership', 'setFeePool', 'transferOwnership', 'burn', 'mint', 'burnFrom', 'transfer', 'renounceMinter', 'addMinter', 'transferFrom', 'decreaseAllowance', 'increaseAllowance', 'approve'][0m
[31m===== Basic pruning the generated candidate sequences (remove executed or invalid sequences) ==== llm_related.py[0m
[31m
==== current all sequences ==== 1 ====llm_related.py[0m
[0m['setFeePool', 'changeFeePool'][0m
[0m['transfer', 'transfer'][0m
[0m['setFeePool', 'feePoolTransfer'][0m
[0m['approve', 'transferFrom'][0m
[0m['approve', 'approve'][0m
[0m['approve', 'increaseAllowance'][0m
[0m['approve', 'decreaseAllowance'][0m
[0m['transfer', 'burnFrom'][0m
[31m
==== all currently executed sequences ==== 1 ====llm_related.py[0m
[0m['setFeePool', 'changeFeePool'][0m
[0m['setFeePool', 'feePoolTransfer'][0m
[0m['approve', 'approve'][0m
[0m['approve', 'increaseAllowance'][0m
[0m['approve', 'decreaseAllowance'][0m
[0m['approve', 'transferFrom'][0m
[0m['transfer', 'burnFrom'][0m
[0m['transfer', 'transfer'][0m
[0mtransfer:1581/1581 are kept (1.0)[0m
[31m['approve', 'transferFrom'] is contained in current sequences and thus should be removed[0m
[0mtransferFrom:1580/1581 are kept (0.9993674889310563)[0m
[31m['setFeePool', 'feePoolTransfer'] is contained in current sequences and thus should be removed[0m
[0mfeePoolTransfer:1152/1153 are kept (0.9991326973113617)[0m
[0mapprove:1625/1625 are kept (1.0)[0m
[31m['approve', 'increaseAllowance'] is contained in current sequences and thus should be removed[0m
[0mincreaseAllowance:1624/1625 are kept (0.9993846153846154)[0m
[31m['approve', 'decreaseAllowance'] is contained in current sequences and thus should be removed[0m
[0mdecreaseAllowance:1580/1581 are kept (0.9993674889310563)[0m
[31m['transfer', 'burnFrom'] is contained in current sequences and thus should be removed[0m
[0mburnFrom:1810/1811 are kept (0.9994478188845941)[0m
[31m===== advanced pruning ==== llm_related.py[0m
[0mtransfer:528/1581 are kept (0.33396584440227706)[0m
[0mtransferFrom:527/1580 are kept (0.33354430379746836)[0m
[0mfeePoolTransfer:354/1152 are kept (0.3072916666666667)[0m
[0mapprove:535/1625 are kept (0.3292307692307692)[0m
[0mincreaseAllowance:534/1624 are kept (0.3288177339901478)[0m
[0mdecreaseAllowance:527/1580 are kept (0.33354430379746836)[0m
[0mburnFrom:691/1810 are kept (0.38176795580110495)[0m
[34mtransfer:[0m
[0m	['setFeePool', 'changeFeePool', 'transfer'][0m
[0m	['setFeePool', 'changeFeePool', 'setTxFee', 'transfer'][0m
[0m	['setFeePool', 'changeFeePool', 'burn', 'transfer'][0m
[0m	['setFeePool', 'changeFeePool', 'mint', 'transfer'][0m
[0m	['setFeePool', 'changeFeePool', 'transferOwnership', 'transfer'][0m
[0m	['setFeePool', 'changeFeePool', 'renounceOwnership', 'transfer'][0m
[0m	['setFeePool', 'transfer'][0m
[0m	['approve', 'transfer'][0m
[0m	['transferOwnership', 'transfer'][0m
[0m	['transferFrom', 'transfer'][0m
[34mtransferFrom:[0m
[0m	['approve', 'setTxFee', 'transferFrom'][0m
[0m	['approve', 'burn', 'transferFrom'][0m
[0m	['approve', 'mint', 'transferFrom'][0m
[0m	['approve', 'setFeePool', 'transferFrom'][0m
[0m	['approve', 'transferOwnership', 'transferFrom'][0m
[0m	['approve', 'renounceOwnership', 'transferFrom'][0m
[0m	['approve', 'renounceMinter', 'mint', 'transferFrom'][0m
[0m	['approve', 'burn', 'changeFeePool', 'transferFrom'][0m
[0m	['approve', 'renounceOwnership', 'mint', 'transferFrom'][0m
[0m	['approve', 'addMinter', 'burn', 'transferFrom'][0m
[34mfeePoolTransfer:[0m
[0m	['setFeePool', 'changeFeePool', 'feePoolTransfer'][0m
[0m	['setFeePool', 'changeFeePool', 'burn', 'feePoolTransfer'][0m
[0m	['setFeePool', 'changeFeePool', 'mint', 'feePoolTransfer'][0m
[0m	['decreaseAllowance', 'setFeePool', 'feePoolTransfer'][0m
[0m	['approve', 'setFeePool', 'feePoolTransfer'][0m
[0m	['setFeePool', 'burn', 'feePoolTransfer'][0m
[0m	['setTxFee', 'setFeePool', 'feePoolTransfer'][0m
[0m	['transferFrom', 'setFeePool', 'feePoolTransfer'][0m
[0m	['burn', 'setFeePool', 'feePoolTransfer'][0m
[0m	['burnFrom', 'setFeePool', 'feePoolTransfer'][0m
[34mapprove:[0m
[0m	['setFeePool', 'changeFeePool', 'approve'][0m
[0m	['setFeePool', 'changeFeePool', 'setTxFee', 'approve'][0m
[0m	['setFeePool', 'changeFeePool', 'burn', 'approve'][0m
[0m	['setFeePool', 'changeFeePool', 'mint', 'approve'][0m
[0m	['setFeePool', 'changeFeePool', 'transferOwnership', 'approve'][0m
[0m	['setFeePool', 'changeFeePool', 'renounceOwnership', 'approve'][0m
[0m	['mint', 'approve'][0m
[0m	['transferOwnership', 'approve'][0m
[0m	['burnFrom', 'approve'][0m
[0m	['decreaseAllowance', 'approve'][0m
[34mincreaseAllowance:[0m
[0m	['approve', 'setTxFee', 'increaseAllowance'][0m
[0m	['approve', 'burn', 'increaseAllowance'][0m
[0m	['approve', 'mint', 'increaseAllowance'][0m
[0m	['approve', 'setFeePool', 'increaseAllowance'][0m
[0m	['approve', 'transferOwnership', 'increaseAllowance'][0m
[0m	['approve', 'renounceOwnership', 'increaseAllowance'][0m
[0m	['approve', 'mint', 'burn', 'increaseAllowance'][0m
[0m	['approve', 'transferOwnership', 'setFeePool', 'increaseAllowance'][0m
[0m	['approve', 'burn', 'renounceOwnership', 'increaseAllowance'][0m
[0m	['approve', 'mint', 'setFeePool', 'increaseAllowance'][0m
[34mdecreaseAllowance:[0m
[0m	['approve', 'setTxFee', 'decreaseAllowance'][0m
[0m	['approve', 'burn', 'decreaseAllowance'][0m
[0m	['approve', 'mint', 'decreaseAllowance'][0m
[0m	['approve', 'setFeePool', 'decreaseAllowance'][0m
[0m	['approve', 'transferOwnership', 'decreaseAllowance'][0m
[0m	['approve', 'renounceOwnership', 'decreaseAllowance'][0m
[0m	['approve', 'setTxFee', 'transferOwnership', 'decreaseAllowance'][0m
[0m	['approve', 'transferOwnership', 'renounceOwnership', 'decreaseAllowance'][0m
[0m	['approve', 'transferOwnership', 'burn', 'decreaseAllowance'][0m
[0m	['approve', 'setFeePool', 'mint', 'decreaseAllowance'][0m
[34mburnFrom:[0m
[0m	['transfer', 'changeFeePool', 'burnFrom'][0m
[0m	['transfer', 'setTxFee', 'burnFrom'][0m
[0m	['transfer', 'burn', 'burnFrom'][0m
[0m	['transfer', 'mint', 'burnFrom'][0m
[0m	['transfer', 'setFeePool', 'burnFrom'][0m
[0m	['transfer', 'transferOwnership', 'burnFrom'][0m
[0m	['transfer', 'renounceMinter', 'burnFrom'][0m
[0m	['transfer', 'addMinter', 'burnFrom'][0m
[0m	['transfer', 'renounceOwnership', 'burnFrom'][0m
[0m	['transfer', 'mint', 'transferOwnership', 'burnFrom'][0m
[31m

===== Generated sequences ====0x899f4ee077f83a7747e4ccec8ee7aa74831a1de3.sol====USMT====2====obtain_sequence.py[0m
[34mtransfer:[0m
[0m	['setFeePool', 'changeFeePool', 'transfer'][0m
[34mtransferFrom:[0m
[0m	['approve', 'setTxFee', 'transferFrom'][0m
[34mfeePoolTransfer:[0m
[0m	['setFeePool', 'burn', 'feePoolTransfer'][0m
[34mapprove:[0m
[0m	['mint', 'approve'][0m
[34mincreaseAllowance:[0m
[0m	['approve', 'mint', 'increaseAllowance'][0m
[34mdecreaseAllowance:[0m
[0m	['approve', 'setTxFee', 'decreaseAllowance'][0m
[34mburnFrom:[0m
[0m	['transfer', 'changeFeePool', 'burnFrom'][0m
[31mFind the state setFeePool(address)#changeFeePool(address)#16 for sequence ['setFeePool', 'changeFeePool', 'transfer'][0m
[31mFind the state approve(address,uint256)#3 for sequence ['approve', 'setTxFee', 'transferFrom'][0m
[31mFind the state setFeePool(address)#1 for sequence ['setFeePool', 'burn', 'feePoolTransfer'][0m
[31mFind the state mint(address,uint256)#11 for sequence ['mint', 'approve'][0m
[31mFind the state transfer(address,uint256)#13 for sequence ['transfer', 'changeFeePool', 'burnFrom'][0m
[31mFind the state transfer(address,uint256)#14 for sequence ['transfer', 'changeFeePool', 'burnFrom'][0m

====== state and assigned functions ======
state key: setFeePool(address)#changeFeePool(address)#16
functions: ['transfer']

====== coverage ======
contract coverage: 91.18%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	82.96%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['setFeePool(address)', 'changeFeePool(address)', 'transfer(address,uint256)']

==============================
queue:
	approve(address,uint256)#3
	setFeePool(address)#1
	mint(address,uint256)#11
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#26
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#27

====== state and assigned functions ======
state key: approve(address,uint256)#3
functions: ['mint', 'setTxFee']

====== coverage ======
contract coverage: 91.18%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	82.96%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['approve(address,uint256)', 'setTxFee(uint256)']
	['approve(address,uint256)', 'mint(address,uint256)']

==============================
queue:
	setFeePool(address)#1
	mint(address,uint256)#11
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#26
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#27
	approve(address,uint256)#setTxFee(uint256)#28
	approve(address,uint256)#mint(address,uint256)#29

====== state and assigned functions ======
state key: setFeePool(address)#1
functions: ['changeFeePool', 'burn']

====== coverage ======
contract coverage: 91.18%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	82.96%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['setFeePool(address)', 'burn(uint256)']
	['setFeePool(address)', 'changeFeePool(address)']

==============================
queue:
	mint(address,uint256)#11
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#26
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#27
	approve(address,uint256)#setTxFee(uint256)#28
	approve(address,uint256)#mint(address,uint256)#29
	setFeePool(address)#burn(uint256)#30
	setFeePool(address)#changeFeePool(address)#31

====== state and assigned functions ======
state key: mint(address,uint256)#11
functions: ['approve']

====== coverage ======
contract coverage: 91.18%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	82.96%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['mint(address,uint256)', 'approve(address,uint256)']

==============================
queue:
	transfer(address,uint256)#13
	transfer(address,uint256)#14
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#26
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#27
	approve(address,uint256)#setTxFee(uint256)#28
	approve(address,uint256)#mint(address,uint256)#29
	setFeePool(address)#burn(uint256)#30
	setFeePool(address)#changeFeePool(address)#31
	mint(address,uint256)#approve(address,uint256)#32

====== state and assigned functions ======
state key: transfer(address,uint256)#13
functions: ['changeFeePool']

====== coverage ======
contract coverage: 91.18%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	82.96%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	transfer(address,uint256)#14
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#26
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#27
	approve(address,uint256)#setTxFee(uint256)#28
	approve(address,uint256)#mint(address,uint256)#29
	setFeePool(address)#burn(uint256)#30
	setFeePool(address)#changeFeePool(address)#31
	mint(address,uint256)#approve(address,uint256)#32

====== state and assigned functions ======
state key: transfer(address,uint256)#14
functions: ['changeFeePool']

====== coverage ======
contract coverage: 91.18%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	68.78%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	82.96%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#26
	setFeePool(address)#changeFeePool(address)#transfer(address,uint256)#27
	approve(address,uint256)#setTxFee(uint256)#28
	approve(address,uint256)#mint(address,uint256)#29
	setFeePool(address)#burn(uint256)#30
	setFeePool(address)#changeFeePool(address)#31
	mint(address,uint256)#approve(address,uint256)#32

====== state and assigned functions ======
state key: approve(address,uint256)#setTxFee(uint256)#28
functions: ['transferFrom', 'decreaseAllowance']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['approve(address,uint256)', 'setTxFee(uint256)', 'decreaseAllowance(address,uint256)']
	['approve(address,uint256)', 'setTxFee(uint256)', 'transferFrom(address,address,uint256)']

==============================
queue:
	approve(address,uint256)#mint(address,uint256)#29
	setFeePool(address)#burn(uint256)#30
	setFeePool(address)#changeFeePool(address)#31
	mint(address,uint256)#approve(address,uint256)#32
	approve(address,uint256)#setTxFee(uint256)#decreaseAllowance(address,uint256)#33
	approve(address,uint256)#setTxFee(uint256)#transferFrom(address,address,uint256)#34

====== state and assigned functions ======
state key: approve(address,uint256)#mint(address,uint256)#29
functions: ['increaseAllowance']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	setFeePool(address)#burn(uint256)#30
	setFeePool(address)#changeFeePool(address)#31
	mint(address,uint256)#approve(address,uint256)#32
	approve(address,uint256)#setTxFee(uint256)#decreaseAllowance(address,uint256)#33
	approve(address,uint256)#setTxFee(uint256)#transferFrom(address,address,uint256)#34

====== state and assigned functions ======
state key: setFeePool(address)#burn(uint256)#30
functions: ['feePoolTransfer']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	setFeePool(address)#changeFeePool(address)#31
	mint(address,uint256)#approve(address,uint256)#32
	approve(address,uint256)#setTxFee(uint256)#decreaseAllowance(address,uint256)#33
	approve(address,uint256)#setTxFee(uint256)#transferFrom(address,address,uint256)#34

====== state and assigned functions ======
state key: setFeePool(address)#changeFeePool(address)#31
functions: ['transfer']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	mint(address,uint256)#approve(address,uint256)#32
	approve(address,uint256)#setTxFee(uint256)#decreaseAllowance(address,uint256)#33
	approve(address,uint256)#setTxFee(uint256)#transferFrom(address,address,uint256)#34
[31m====== Collect feedback ==========llm_related.py[0m
[31mtarget(s):['transferFrom', 'feePoolTransfer', 'approve', 'transfer', 'increaseAllowance', 'decreaseAllowance', 'burnFrom'][0m
[31mtarget: code coverage:[0m
[0m	transferFrom:73.16326530612245[0m
[0m	feePoolTransfer:84.10351201478743[0m
[0m	approve:84.53237410071942[0m
[0m	transfer:87.29838709677419[0m
[0m	increaseAllowance:88.88888888888889[0m
[0m	decreaseAllowance:88.88888888888889[0m
[0m	burnFrom:91.88679245283019[0m
[34mtransferFrom[0m
[0m['approve', 'setTxFee', 'transferFrom'] is a valid sequence. However,function transferFrom still has the code coverage 73.16326530612245 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for transferFrom.[0m
[34mfeePoolTransfer[0m
[0m['setFeePool', 'burn', 'feePoolTransfer'] is invalid. The execution stops at function feePoolTransfer. The code coverage of this function so far is 84.10351201478743. The code coverage can be further improved. Please find a proper sequence to increase code coverage for feePoolTransfer.[0m
[34mapprove[0m
[0m['mint', 'approve'] is a valid sequence. However,function approve still has the code coverage 84.53237410071942 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for approve.[0m
[34mtransfer[0m
[0m['setFeePool', 'changeFeePool', 'transfer'] is a valid sequence. However,function transfer still has the code coverage 87.29838709677419 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for transfer.[0m
[34mincreaseAllowance[0m
[0m['approve', 'mint', 'increaseAllowance'] is invalid. The execution stops at function increaseAllowance. The code coverage of this function so far is 88.88888888888889. The code coverage can be further improved. Please find a proper sequence to increase code coverage for increaseAllowance.[0m
[34mdecreaseAllowance[0m
[0m['approve', 'setTxFee', 'decreaseAllowance'] is a valid sequence. However,function decreaseAllowance still has the code coverage 88.88888888888889 below the threshold 98. The code coverage does not change after the execution of this sequence. Hence, please try to understand the contract code and find a proper sequence for decreaseAllowance.[0m
[34mburnFrom[0m
[0m['transfer', 'changeFeePool', 'burnFrom'] is invalid. The execution stops at function changeFeePool. The code coverage of this function so far is 91.88679245283019. The code coverage can be further improved. Please find a proper sequence to increase code coverage for burnFrom.[0m
[31m

===== Generated sequences ====0x899f4ee077f83a7747e4ccec8ee7aa74831a1de3.sol====USMT====3====obtain_sequence.py[0m
[31mFind the state setFeePool(address)#changeFeePool(address)#31 for sequence ['setFeePool', 'changeFeePool', 'setTxFee', 'transfer'][0m
[31mFind the state setFeePool(address)#changeFeePool(address)#16 for sequence ['setFeePool', 'changeFeePool', 'setTxFee', 'transfer'][0m
[31mFind the state approve(address,uint256)#mint(address,uint256)#29 for sequence ['approve', 'mint', 'transferFrom'][0m
[31mFind the state approve(address,uint256)#setTxFee(uint256)#28 for sequence ['approve', 'setTxFee', 'increaseAllowance'][0m

====== state and assigned functions ======
state key: setFeePool(address)#changeFeePool(address)#31
functions: ['feePoolTransfer', 'approve', 'burnFrom', 'setTxFee']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['setFeePool(address)', 'changeFeePool(address)', 'approve(address,uint256)']
	['setFeePool(address)', 'changeFeePool(address)', 'setTxFee(uint256)']
	['setFeePool(address)', 'changeFeePool(address)', 'feePoolTransfer(address,uint256)']
	['setFeePool(address)', 'changeFeePool(address)', 'burnFrom(address,uint256)']

==============================
queue:
	setFeePool(address)#changeFeePool(address)#16
	approve(address,uint256)#mint(address,uint256)#29
	approve(address,uint256)#setTxFee(uint256)#28
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#35
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#36
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#37
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#38

====== state and assigned functions ======
state key: setFeePool(address)#changeFeePool(address)#16
functions: ['feePoolTransfer', 'approve', 'burnFrom', 'setTxFee']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['setFeePool(address)', 'changeFeePool(address)', 'approve(address,uint256)']
	['setFeePool(address)', 'changeFeePool(address)', 'setTxFee(uint256)']
	['setFeePool(address)', 'changeFeePool(address)', 'feePoolTransfer(address,uint256)']
	['setFeePool(address)', 'changeFeePool(address)', 'burnFrom(address,uint256)']

==============================
queue:
	approve(address,uint256)#mint(address,uint256)#29
	approve(address,uint256)#setTxFee(uint256)#28
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#35
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#39
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#36
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#40
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#37
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#41
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#38
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#42

====== state and assigned functions ======
state key: approve(address,uint256)#mint(address,uint256)#29
functions: ['transferFrom', 'decreaseAllowance']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	approve(address,uint256)#setTxFee(uint256)#28
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#35
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#39
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#36
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#40
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#37
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#41
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#38
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#42

====== state and assigned functions ======
state key: approve(address,uint256)#setTxFee(uint256)#28
functions: ['increaseAllowance']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	['approve(address,uint256)', 'setTxFee(uint256)', 'increaseAllowance(address,uint256)']

==============================
queue:
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#35
	setFeePool(address)#changeFeePool(address)#approve(address,uint256)#39
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#36
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#40
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#37
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#41
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#38
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#42
	approve(address,uint256)#setTxFee(uint256)#increaseAllowance(address,uint256)#43

====== state and assigned functions ======
state key: setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#36
functions: ['transfer']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#40
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#37
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#41
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#38
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#42
	approve(address,uint256)#setTxFee(uint256)#increaseAllowance(address,uint256)#43

====== state and assigned functions ======
state key: setFeePool(address)#changeFeePool(address)#setTxFee(uint256)#40
functions: ['transfer']

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]

==============================
queue:
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#37
	setFeePool(address)#changeFeePool(address)#feePoolTransfer(address,uint256)#41
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#38
	setFeePool(address)#changeFeePool(address)#burnFrom(address,uint256)#42
	approve(address,uint256)#setTxFee(uint256)#increaseAllowance(address,uint256)#43

====== state and assigned functions ======

====== coverage ======
contract coverage: 91.93%
function coverage:
	85.66%: name()
	84.53%: approve(address,uint256)
	100.00%: totalSupply()
	100.00%: setFeePool(address)
	73.16%: transferFrom(address,address,uint256)
	100.00%: INITIAL_SUPPLY()
	100.00%: decimals()
	88.89%: increaseAllowance(address,uint256)
	100.00%: mint(address,uint256)
	100.00%: burn(uint256)
	100.00%: txFeePerMillion()
	100.00%: balanceOf(address)
	100.00%: renounceOwnership()
	91.89%: burnFrom(address,uint256)
	84.10%: feePoolTransfer(address,uint256)
	100.00%: owner()
	100.00%: isOwner()
	85.66%: symbol()
	100.00%: addMinter(address)
	100.00%: renounceMinter()
	88.89%: decreaseAllowance(address,uint256)
	87.30%: transfer(address,uint256)
	100.00%: isMinter(address)
	100.00%: feePool()
	100.00%: changeFeePool(address)
	100.00%: allowance(address,address)
	100.00%: setTxFee(uint256)
	100.00%: transferOwnership(address)
	100.00%: fallback

====== current state changing sequence(s): ======
	[]
#@statespace
1321 nodes, 1320 edges, 23384 total states
#@coverage
Achieved 6.93% coverage for code: 608060405260006008556601c6bf526340006009553480156200002157600080fd5b506040805190810160405280601181526020017f5553204d6f6e657461727920546f6b656e0000000000000000000000000000008152506040805190810160405280600481526020017f55534d54000000000000000000000000000000000000000000000000000000008152506006336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a362000166336200020b640100000000026401000000009004565b82600290805190602001906200017e92919062000488565b5081600390805190602001906200019792919062000488565b5080600460006101000a81548160ff021916908360ff160217905550505050600954600781905550600954600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000537565b6200022f81600162000275640100000000026200331a179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b62000290828262000364640100000000026401000000009004565b15151562000306576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004cb57805160ff1916838001178555620004fc565b82800160010185558215620004fc579182015b82811115620004fb578251825591602001919060010190620004de565b5b5090506200050b91906200050f565b5090565b6200053491905b808211156200053057600081600090555060010162000516565b5090565b90565b61352580620005476000396000f3fe60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461016f578063095ea7b3146101ff57806318160ddd1461027257806319db22281461029d57806323b872dd146103065780632ff2e9dc14610399578063313ce567146103c457806339509351146103f557806340c10f191461046857806342966c68146104db5780635f8c7fd81461051657806370a0823114610541578063715018a6146105a657806379cc6790146105bd578063825b31b8146106185780638da5cb5b1461068b5780638f32d59b146106e257806395d89b4114610711578063983b2d56146107a157806398650275146107f2578063a457c2d714610809578063a9059cbb1461087c578063aa271e1a146108ef578063ae2e933b14610958578063d367e2aa146109af578063dd62ed3e14610a18578063f05d16f714610a9d578063f2fde38b14610af0575b600080fd5b34801561017b57600080fd5b50610184610b41565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c45780820151818401526020810190506101a9565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020b57600080fd5b506102586004803603604081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610be3565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610bfa565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102ec600480360360208110156102c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c04565b604051808215151515815260200191505060405180910390f35b34801561031257600080fd5b5061037f6004803603606081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d08565b604051808215151515815260200191505060405180910390f35b3480156103a557600080fd5b506103ae6113c8565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b506103d96113ce565b604051808260ff1660ff16815260200191505060405180910390f35b34801561040157600080fd5b5061044e6004803603604081101561041857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113e5565b604051808215151515815260200191505060405180910390f35b34801561047457600080fd5b506104c16004803603604081101561048b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061148a565b604051808215151515815260200191505060405180910390f35b3480156104e757600080fd5b50610514600480360360208110156104fe57600080fd5b8101908080359060200190929190505050611543565b005b34801561052257600080fd5b5061052b611550565b6040518082815260200191505060405180910390f35b34801561054d57600080fd5b506105906004803603602081101561056457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611556565b6040518082815260200191505060405180910390f35b3480156105b257600080fd5b506105bb61159f565b005b3480156105c957600080fd5b50610616600480360360408110156105e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116da565b005b34801561062457600080fd5b506106716004803603604081101561063b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116e8565b604051808215151515815260200191505060405180910390f35b34801561069757600080fd5b506106a06117e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ee57600080fd5b506106f7611810565b604051808215151515815260200191505060405180910390f35b34801561071d57600080fd5b50610726611867565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561076657808201518184015260208101905061074b565b50505050905090810190601f1680156107935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107ad57600080fd5b506107f0600480360360208110156107c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611909565b005b3480156107fe57600080fd5b506108076119b8565b005b34801561081557600080fd5b506108626004803603604081101561082c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119c3565b604051808215151515815260200191505060405180910390f35b34801561088857600080fd5b506108d56004803603604081101561089f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a68565b604051808215151515815260200191505060405180910390f35b3480156108fb57600080fd5b5061093e6004803603602081101561091257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e46565b604051808215151515815260200191505060405180910390f35b34801561096457600080fd5b5061096d611e63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109bb57600080fd5b506109fe600480360360208110156109d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e89565b604051808215151515815260200191505060405180910390f35b348015610a2457600080fd5b50610a8760048036036040811015610a3b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b2565b6040518082815260200191505060405180910390f35b348015610aa957600080fd5b50610ad660048036036020811015610ac057600080fd5b8101908080359060200190929190505050612239565b604051808215151515815260200191505060405180910390f35b348015610afc57600080fd5b50610b3f60048036036020811015610b1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122c7565b005b606060028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bd95780601f10610bae57610100808354040283529160200191610bd9565b820191906000526020600020905b815481529060010190602001808311610bbc57829003601f168201915b5050505050905090565b6000610bf033848461234f565b6001905092915050565b6000600754905090565b6000610c0e611810565b1515610c82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cbe57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d4557600080fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d9357600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610e1e57600080fd5b6000610e4a620f4240610e3c600854866125d090919063ffffffff16565b61269d90919063ffffffff16565b90506000610e61828561273090919063ffffffff16565b9050610eb584600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f4a81600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061101c84600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113bb576111cd8260056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b60056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a15fe4933866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561137e57600080fd5b505af1158015611392573d6000803e3d6000fd5b505050506040513d60208110156113a857600080fd5b8101908080519060200190929190505050505b6001925050509392505050565b60095481565b6000600460009054906101000a900460ff16905090565b6000611480338461147b85600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b61234f565b6001905092915050565b600061149533611e46565b151561152f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6115398383612845565b6001905092915050565b61154d3382612a04565b50565b60085481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6115a7611810565b151561161b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6116e48282612be9565b5050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561174757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561178357600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111515156117d157600080fd5b6117dc338585612c90565b600191505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ff5780601f106118d4576101008083540402835291602001916118ff565b820191906000526020600020905b8154815290600101906020018083116118e257829003601f168201915b5050505050905090565b61191233611e46565b15156119ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6119b581612fba565b50565b6119c133613014565b565b6000611a5e3384611a5985600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b61234f565b6001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611aa557600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611af357600080fd5b6000611b1f620f4240611b11600854866125d090919063ffffffff16565b61269d90919063ffffffff16565b90506000611b36828561273090919063ffffffff16565b9050611b43338683612c90565b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611e3a57611c0f8260056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b60056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3611d036117e7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e3957600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a15fe4933866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611dfc57600080fd5b505af1158015611e10573d6000803e3d6000fd5b505050506040513d6020811015611e2657600080fd5b8101908080519060200190929190505050505b5b60019250505092915050565b6000611e5c82600161306e90919063ffffffff16565b9050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611e93611810565b1515611f07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611fce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6e6f20466565506f6f6c2073657420796574000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561200a57600080fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561205857600080fd5b600060056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905582600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000612243611810565b15156122b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8160088190555060019050919050565b6122cf611810565b1515612343576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61234c81613191565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561241a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000808314156125e35760009050612697565b600082840290508284828115156125f657fe5b04141515612692576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b60008082111515612716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481151561272357fe5b0490508091505092915050565b60008282111515156127aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015151561283b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6128ff816007546127bb90919063ffffffff16565b60078190555061295781600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612acf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612ae48160075461273090919063ffffffff16565b600781905550612b3c81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b612bf38282612a04565b612c8c8233612c8784600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b61234f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612d5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612e26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612e7881600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612f0d81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b612fce81600161331a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6130288160016133f790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561313a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561325c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613324828261306e565b151515613399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613401828261306e565b151561349b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c81526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a72305820c76d4ee90653e11289cf79bc946538118a62b5d185cf4edeefae554ad82e12ed0029
#@coverage
Achieved 91.93% coverage for code: 60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461016f578063095ea7b3146101ff57806318160ddd1461027257806319db22281461029d57806323b872dd146103065780632ff2e9dc14610399578063313ce567146103c457806339509351146103f557806340c10f191461046857806342966c68146104db5780635f8c7fd81461051657806370a0823114610541578063715018a6146105a657806379cc6790146105bd578063825b31b8146106185780638da5cb5b1461068b5780638f32d59b146106e257806395d89b4114610711578063983b2d56146107a157806398650275146107f2578063a457c2d714610809578063a9059cbb1461087c578063aa271e1a146108ef578063ae2e933b14610958578063d367e2aa146109af578063dd62ed3e14610a18578063f05d16f714610a9d578063f2fde38b14610af0575b600080fd5b34801561017b57600080fd5b50610184610b41565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c45780820151818401526020810190506101a9565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020b57600080fd5b506102586004803603604081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610be3565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610bfa565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102ec600480360360208110156102c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c04565b604051808215151515815260200191505060405180910390f35b34801561031257600080fd5b5061037f6004803603606081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d08565b604051808215151515815260200191505060405180910390f35b3480156103a557600080fd5b506103ae6113c8565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b506103d96113ce565b604051808260ff1660ff16815260200191505060405180910390f35b34801561040157600080fd5b5061044e6004803603604081101561041857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113e5565b604051808215151515815260200191505060405180910390f35b34801561047457600080fd5b506104c16004803603604081101561048b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061148a565b604051808215151515815260200191505060405180910390f35b3480156104e757600080fd5b50610514600480360360208110156104fe57600080fd5b8101908080359060200190929190505050611543565b005b34801561052257600080fd5b5061052b611550565b6040518082815260200191505060405180910390f35b34801561054d57600080fd5b506105906004803603602081101561056457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611556565b6040518082815260200191505060405180910390f35b3480156105b257600080fd5b506105bb61159f565b005b3480156105c957600080fd5b50610616600480360360408110156105e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116da565b005b34801561062457600080fd5b506106716004803603604081101561063b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116e8565b604051808215151515815260200191505060405180910390f35b34801561069757600080fd5b506106a06117e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ee57600080fd5b506106f7611810565b604051808215151515815260200191505060405180910390f35b34801561071d57600080fd5b50610726611867565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561076657808201518184015260208101905061074b565b50505050905090810190601f1680156107935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107ad57600080fd5b506107f0600480360360208110156107c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611909565b005b3480156107fe57600080fd5b506108076119b8565b005b34801561081557600080fd5b506108626004803603604081101561082c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119c3565b604051808215151515815260200191505060405180910390f35b34801561088857600080fd5b506108d56004803603604081101561089f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a68565b604051808215151515815260200191505060405180910390f35b3480156108fb57600080fd5b5061093e6004803603602081101561091257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e46565b604051808215151515815260200191505060405180910390f35b34801561096457600080fd5b5061096d611e63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109bb57600080fd5b506109fe600480360360208110156109d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e89565b604051808215151515815260200191505060405180910390f35b348015610a2457600080fd5b50610a8760048036036040811015610a3b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b2565b6040518082815260200191505060405180910390f35b348015610aa957600080fd5b50610ad660048036036020811015610ac057600080fd5b8101908080359060200190929190505050612239565b604051808215151515815260200191505060405180910390f35b348015610afc57600080fd5b50610b3f60048036036020811015610b1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122c7565b005b606060028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bd95780601f10610bae57610100808354040283529160200191610bd9565b820191906000526020600020905b815481529060010190602001808311610bbc57829003601f168201915b5050505050905090565b6000610bf033848461234f565b6001905092915050565b6000600754905090565b6000610c0e611810565b1515610c82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cbe57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d4557600080fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d9357600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610e1e57600080fd5b6000610e4a620f4240610e3c600854866125d090919063ffffffff16565b61269d90919063ffffffff16565b90506000610e61828561273090919063ffffffff16565b9050610eb584600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f4a81600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061101c84600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113bb576111cd8260056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b60056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a15fe4933866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561137e57600080fd5b505af1158015611392573d6000803e3d6000fd5b505050506040513d60208110156113a857600080fd5b8101908080519060200190929190505050505b6001925050509392505050565b60095481565b6000600460009054906101000a900460ff16905090565b6000611480338461147b85600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b61234f565b6001905092915050565b600061149533611e46565b151561152f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6115398383612845565b6001905092915050565b61154d3382612a04565b50565b60085481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6115a7611810565b151561161b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6116e48282612be9565b5050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561174757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561178357600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111515156117d157600080fd5b6117dc338585612c90565b600191505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ff5780601f106118d4576101008083540402835291602001916118ff565b820191906000526020600020905b8154815290600101906020018083116118e257829003601f168201915b5050505050905090565b61191233611e46565b15156119ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6119b581612fba565b50565b6119c133613014565b565b6000611a5e3384611a5985600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b61234f565b6001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611aa557600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611af357600080fd5b6000611b1f620f4240611b11600854866125d090919063ffffffff16565b61269d90919063ffffffff16565b90506000611b36828561273090919063ffffffff16565b9050611b43338683612c90565b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611e3a57611c0f8260056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b60056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3611d036117e7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e3957600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a15fe4933866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611dfc57600080fd5b505af1158015611e10573d6000803e3d6000fd5b505050506040513d6020811015611e2657600080fd5b8101908080519060200190929190505050505b5b60019250505092915050565b6000611e5c82600161306e90919063ffffffff16565b9050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611e93611810565b1515611f07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611fce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6e6f20466565506f6f6c2073657420796574000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561200a57600080fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561205857600080fd5b600060056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060056000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905582600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000612243611810565b15156122b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8160088190555060019050919050565b6122cf611810565b1515612343576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61234c81613191565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561241a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000808314156125e35760009050612697565b600082840290508284828115156125f657fe5b04141515612692576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b60008082111515612716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481151561272357fe5b0490508091505092915050565b60008282111515156127aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015151561283b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6128ff816007546127bb90919063ffffffff16565b60078190555061295781600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612acf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612ae48160075461273090919063ffffffff16565b600781905550612b3c81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b612bf38282612a04565b612c8c8233612c8784600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b61234f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612d5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612e26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612e7881600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461273090919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612f0d81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127bb90919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b612fce81600161331a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6130288160016133f790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561313a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561325c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613324828261306e565b151515613399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613401828261306e565b151561349b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c81526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a72305820c76d4ee90653e11289cf79bc946538118a62b5d185cf4edeefae554ad82e12ed0029
[31m#@llm related statistics[0m
[31mLLM model:llama[0m
[31mtime used(s) by LLM:37.34269380569458[0m
[31minput token counts:[2477, 4724, 6215][0m
[31moutput token counts:[494, 758, 791][0m
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: USMT
Function name: transfer(address,uint256)
PC address: 7679
Estimated Gas Usage: 30885 - 130302
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./tests/testdata/solidity_files/0x899f4ee077f83a7747e4ccec8ee7aa74831a1de3.sol:548

   delete _balances[address(feePool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setFeePool(address), txdata: 0x19db2228000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: changeFeePool(address), txdata: 0xd367e2aa222222222222222222222222deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbbadadadadadadadadadadadadaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000000000000000, value: 0x0


#@time
time used(s):2046.6747999191284
